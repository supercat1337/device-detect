var w={d:(a,e)=>{for(var i in e)w.o(e,i)&&!w.o(a,i)&&Object.defineProperty(a,i,{enumerable:!0,get:e[i]})},o:(a,e)=>Object.prototype.hasOwnProperty.call(a,e)},S={};w.d(S,{A:()=>B,k:()=>v});var C=function(a,e,i,n){return new(i||(i=Promise))(function(r,s){function o(u){try{c(n.next(u))}catch(t){s(t)}}function l(u){try{c(n.throw(u))}catch(t){s(t)}}function c(u){var t;u.done?r(u.value):(t=u.value,t instanceof i?t:new i(function(f){f(t)})).then(o,l)}c((n=n.apply(a,e||[])).next())})},A=function(a,e){var i,n,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function l(c){return function(u){return function(t){if(i)throw new TypeError("Generator is already executing.");for(;s&&(s=0,t[0]&&(o=0)),o;)try{if(i=1,n&&(r=2&t[0]?n.return:t[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,t[1])).done)return r;switch(n=0,r&&(t=[2&t[0],r.value]),t[0]){case 0:case 1:r=t;break;case 4:return o.label++,{value:t[1],done:!1};case 5:o.label++,n=t[1],t=[0];continue;case 7:t=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||t[0]!==6&&t[0]!==2)){o=0;continue}if(t[0]===3&&(!r||t[1]>r[0]&&t[1]<r[3])){o.label=t[1];break}if(t[0]===6&&o.label<r[1]){o.label=r[1],r=t;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(t);break}r[2]&&o.ops.pop(),o.trys.pop();continue}t=e.call(a,o)}catch(f){t=[6,f],n=0}finally{i=r=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([c,u])}}};function v(){return C(this,void 0,Promise,function(){return A(this,function(_a){switch(_a.label){case 0:return[4,new Promise(function(resolve,reject){var browserName="Unknown";function __callback(a){resolve({isPrivate:a,browserName})}function identifyChromium(){var a=navigator.userAgent;return a.match(/Chrome/)?navigator.brave!==void 0?"Brave":a.match(/Edg/)?"Edge":a.match(/OPR/)?"Opera":"Chrome":"Chromium"}function assertEvalToString(a){return a===eval.toString().length}function feid(){var toFixedEngineID=0;try{eval("(-1).toFixed(-1);")}catch(a){toFixedEngineID=a.message.length}return toFixedEngineID}function isSafari(){return feid()===44}function isChrome(){return feid()===51}function isFirefox(){return feid()===25}function isMSIE(){return navigator.msSaveBlob!==void 0&&assertEvalToString(39)}function newSafariTest(){var a=String(Math.random());try{window.indexedDB.open(a,1).onupgradeneeded=function(e){var i,n,r=(i=e.target)===null||i===void 0?void 0:i.result;try{r.createObjectStore("test",{autoIncrement:!0}).put(new Blob),__callback(!1)}catch(o){var s=o;return o instanceof Error&&(s=(n=o.message)!==null&&n!==void 0?n:o),typeof s!="string"?void __callback(!1):void __callback(s.includes("BlobURLs are not yet supported"))}finally{r.close(),window.indexedDB.deleteDatabase(a)}}}catch{__callback(!1)}}function oldSafariTest(){var a=window.openDatabase,e=window.localStorage;try{a(null,null,null,null)}catch{return void __callback(!0)}try{e.setItem("test","1"),e.removeItem("test")}catch{return void __callback(!0)}__callback(!1)}function safariPrivateTest(){navigator.maxTouchPoints!==void 0?newSafariTest():oldSafariTest()}function getQuotaLimit(){var a=window;return a.performance!==void 0&&a.performance.memory!==void 0&&a.performance.memory.jsHeapSizeLimit!==void 0?performance.memory.jsHeapSizeLimit:1073741824}function storageQuotaChromePrivateTest(){navigator.webkitTemporaryStorage.queryUsageAndQuota(function(a,e){__callback(Math.round(e/1048576)<2*Math.round(getQuotaLimit()/1048576))},function(a){reject(new Error("detectIncognito somehow failed to query storage quota: "+a.message))})}function oldChromePrivateTest(){(0,window.webkitRequestFileSystem)(0,1,function(){__callback(!1)},function(){__callback(!0)})}function chromePrivateTest(){self.Promise!==void 0&&self.Promise.allSettled!==void 0?storageQuotaChromePrivateTest():oldChromePrivateTest()}function firefoxPrivateTest(){__callback(navigator.serviceWorker===void 0)}function msiePrivateTest(){__callback(window.indexedDB===void 0)}function main(){isSafari()?(browserName="Safari",safariPrivateTest()):isChrome()?(browserName=identifyChromium(),chromePrivateTest()):isFirefox()?(browserName="Firefox",firefoxPrivateTest()):isMSIE()?(browserName="Internet Explorer",msiePrivateTest()):reject(new Error("detectIncognito cannot determine the browser"))}main()})];case 1:return[2,_a.sent()]}})})}typeof window<"u"&&(window.detectIncognito=v);var B=v,D=S.A,M=S.k;function K(){let a=!1;if("maxTouchPoints"in navigator)a=navigator.maxTouchPoints>0;else if("msMaxTouchPoints"in navigator)a=navigator.msMaxTouchPoints>0;else{let e=matchMedia?.("(pointer:coarse)");if(e?.media==="(pointer:coarse)")a=!!e.matches;else if("orientation"in window)a=!0;else{let i=navigator.userAgent;a=/\b(BlackBerry|webOS|iPhone|IEMobile|Mobile)\b/i.test(i)||/\b(Android|Windows Phone|iPad|iPod)\b/i.test(i)}}return a}function R(){try{return matchMedia("(pointer:fine)").matches}catch(a){return console.error(a),!1}}function I(){let a=window.navigator.userAgentData;if(a&&typeof a.mobile<"u")return a.mobile;let e=navigator.userAgent.toLowerCase();return!!(/mobi|tablet/.test(e)||/uZard|Opera Mini|BlackBerry/i.test(e))}async function x(){try{let a=window.navigator.userAgentData;return a&&(await a.getHighEntropyValues(["model"])).model||null}catch(a){return console.error("Error getting device model:",a),null}}var N=new Map([["320x480","IPhone 4S, 4, 3GS, 3G, 1st gen"],["414x896","iPhone 11, 11 Pro Max, XR, XS Max"],["375x812","IPhone X, XS, 11 Pro, 12 Mini, 13 Mini"],["390x844","iPhone 12, 12 Pro, 13, 13 Pro, 14"],["360x780","iPhone 12 mini, 13 mini"],["428x926","iPhone 12 Pro Max, 13 Pro Max, 14 Plus"],["393x852","iPhone 14 Pro, 15, 15 Pro, 16"],["430x932","iPhone 14 Pro Max, 15 Plus, 15 Pro Max, 16 Plus"],["320x568","iPhone 5, 5c, 5s, SE"],["375x667","iPhone 6, 6s, 7, 8, SE (2020), SE (2022)"],["414x736","iPhone 6s Plus, 7 Plus, 8 Plus"],["402x874","iPhone 16 Pro"],["440x956","iPhone 16 Pro Max"],["820x1180","iPad iPad Air (5th gen), iPad Air (4th gen), iPad (10th gen)"],["834x1112","iPad iPad Air (3rd gen)"],["744x1133","iPad iPad Mini (6th gen)"],["768x1024","iPad iPad Mini (5th gen), iPad Mini 4, iPad (6th gen), iPad (5th gen), iPad III & IV gen, iPad Air 1 & 2, iPad Mini 2 & 3, iPad Mini"],["810x1080","iPad iPad (9th gen), iPad (8th gen), iPad (7th gen)"],["1024x1366","iPad iPad Pro"]]);function E(a=window.navigator.userAgent){if(a.indexOf("Android")==-1)return"";let e=a.slice(window.navigator.userAgent.indexOf("Android")),i=e.slice(e.indexOf("; ")+1,e.indexOf(")"));return i?i.trim().split(" ")[0]:""}function y(){let a=window.navigator.userAgent;if(!/iphone|ipad|macintosh/i.test(a))return"";let e=window.screen,i=`${e.width}x${e.height}`,n=N.get(i);return n||""}function m(){return window.navigator.userAgent.toLowerCase().indexOf("iphone")>-1}function g(){if(m())return!1;let a=window.navigator.userAgent.toLowerCase();return a.indexOf("ipad")>-1||a.indexOf("macintosh")>-1&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>2&&navigator.platform!=="iPhone"}function O(){let a=window.navigator.userAgent;return!(!/iphone|ipad|macintosh/i.test(a)||m()||g())}function V(){return g()||/tablet|ipad/i.test(window.navigator.userAgent)?"Tablet":m()||I()?"Mobile":"Desktop"}async function U(){let a="";if(g())return a=y(),a==""?"iPad":a;if(m())return a=y(),a==""?"iPhone":a;if(O())return"Mac";let e=await x();return e||(I()&&window.navigator.userAgent.includes("Android")&&(a=E(),a)?a:"-")}async function G(){let a=window.navigator.userAgent;if(/android/i.test(a)===!1)return!1;let e=window.navigator.userAgentData;if(e){let n=await e.getHighEntropyValues(["platformVersion"]);if(n.platformVersion)return"Android "+n.platformVersion}let i=a.match(/android\s([0-9\.]*)/i);return i?"Android "+i[1]:"Android"}async function H(a=window.navigator.userAgent){var e="Unknown",i=[{os:"iOS",re:/iP(hone|od|ad)/},{os:"Android",re:/Android/},{os:"BlackBerry OS",re:/BlackBerry|BB10/},{os:"Windows Mobile",re:/IEMobile/},{os:"Amazon OS",re:/Kindle/},{os:"Windows 3.11",re:/Win16/},{os:"Windows 95",re:/(Windows 95)|(Win95)|(Windows_95)/},{os:"Windows 98",re:/(Windows 98)|(Win98)/},{os:"Windows 2000",re:/(Windows NT 5.0)|(Windows 2000)/},{os:"Windows XP",re:/(Windows NT 5.1)|(Windows XP)/},{os:"Windows Server 2003",re:/(Windows NT 5.2)/},{os:"Windows Vista",re:/(Windows NT 6.0)/},{os:"Windows 7",re:/(Windows NT 6.1)/},{os:"Windows 8",re:/(Windows NT 6.2)/},{os:"Windows 8.1",re:/(Windows NT 6.3)/},{os:"Windows 10",re:/(Windows NT 10.0)/},{os:"Windows ME",re:/Windows ME/},{os:"Windows CE",re:/Windows CE|WinCE|Microsoft Pocket Internet Explorer/},{os:"Open BSD",re:/OpenBSD/},{os:"Sun OS",re:/SunOS/},{os:"Chrome OS",re:/CrOS/},{os:"Linux",re:/(Linux|X11)\s*([^\s;]+)*/},{os:"Mac OS",re:/(Mac_PowerPC)|(Macintosh)/},{os:"QNX",re:/QNX/},{os:"BeOS",re:/BeOS/},{os:"OS/2",re:/OS\/2/},{os:"Aurora",re:/Aurora/}];for(let n=0,r=i.length;n<r;n++)if(i[n].re.exec(a)){e=i[n].os;break}if(e=="Windows 10")return await W()?"Windows 11":"Windows 10";if(e=="Aurora"){let n=a.match(/Aurora\/([^\s;]+)/i);return n&&(e=e+" "+n[1]),e}if(e=="iOS"){let n=a.match(/OS (\d+)_(\d+)_(\d+)/);return n&&(e+=" "+n[1]+"."+n[2]+"."+n[3]),e}if(e=="Mac OS"){let n=a.match(/Mac OS X\s([0-9\.]*)/i);if(n){if(g()){e="iPad OS";let r=a.match(/Version\/([^\s;]+)/);return r&&(e=e+" "+r[1]),e}e=e+" "+n[1]}return e}if(e=="Android"){let n=await G();if(n)return n}return e}async function W(){let a=window.navigator.userAgentData;if(!a)return!1;let e=await a.getHighEntropyValues(["platformVersion"]);return a.platform!=="Windows"||typeof e.platformVersion!="string"?!1:parseInt(e.platformVersion.split(".")[0])>=13}var T={AE:"United Arab Emirates",AF:"Afghanistan",AG:"Antigua and Barbuda",AI:"Anguilla",AL:"Albania",AM:"Armenia",AO:"Angola",AQ:"Antarctica",AR:"Argentina",AS:"American Samoa",AT:"Austria",AU:"Australia",AW:"Aruba",AX:"\xC5land Islands",AZ:"Azerbaijan",BA:"Bosnia and Herzegovina",BB:"Barbados",BD:"Bangladesh",BE:"Belgium",BF:"Burkina Faso",BG:"Bulgaria",BH:"Bahrain",BI:"Burundi",BJ:"Benin",BL:"Saint Barth\xE9lemy",BM:"Bermuda",BN:"Brunei Darussalam",BO:"Bolivia, Plurinational State of",BQ:"Bonaire, Sint Eustatius and Saba",BR:"Brazil",BS:"Bahamas",BT:"Bhutan",BV:"Bouvet Island",BW:"Botswana",BY:"Belarus",BZ:"Belize",CA:"Canada",CC:"Cocos (Keeling) Islands",CD:"Congo, Democratic Republic of the",CF:"Central African Republic",CG:"Congo",CH:"Switzerland",CI:"C\xF4te d'Ivoire",CK:"Cook Islands",CL:"Chile",CM:"Cameroon",CN:"China",CO:"Colombia",CR:"Costa Rica",CU:"Cuba",CV:"Cabo Verde",CW:"Cura\xE7ao",CX:"Christmas Island",CY:"Cyprus",CZ:"Czechia",DE:"Germany",DJ:"Djibouti",DK:"Denmark",DM:"Dominica",DO:"Dominican Republic",DZ:"Algeria",EC:"Ecuador",EE:"Estonia",EG:"Egypt",EH:"Western Sahara",ER:"Eritrea",ES:"Spain",ET:"Ethiopia",FI:"Finland",FJ:"Fiji",FK:"Falkland Islands (Malvinas)",FM:"Micronesia, Federated States of",FO:"Faroe Islands",FR:"France",GA:"Gabon",GB:"United Kingdom of Great Britain and Northern Ireland",GD:"Grenada",GE:"Georgia",GF:"French Guiana",GG:"Guernsey",GH:"Ghana",GI:"Gibraltar",GL:"Greenland",GM:"Gambia",GN:"Guinea",GP:"Guadeloupe",GQ:"Equatorial Guinea",GR:"Greece",GS:"South Georgia and the South Sandwich Islands",GT:"Guatemala",GU:"Guam",GW:"Guinea-Bissau",GY:"Guyana",HK:"Hong Kong",HM:"Heard Island and McDonald Islands",HN:"Honduras",HR:"Croatia",HT:"Haiti",HU:"Hungary",ID:"Indonesia",IE:"Ireland",IL:"Israel",IM:"Isle of Man",IN:"India",IO:"British Indian Ocean Territory",IQ:"Iraq",IR:"Iran, Islamic Republic of",IS:"Iceland",IT:"Italy",JE:"Jersey",JM:"Jamaica",JO:"Jordan",JP:"Japan",KE:"Kenya",KG:"Kyrgyzstan",KH:"Cambodia",KI:"Kiribati",KM:"Comoros",KN:"Saint Kitts and Nevis",KP:"Korea, Democratic People's Republic of",KR:"Korea, Republic of",KW:"Kuwait",KY:"Cayman Islands",KZ:"Kazakhstan",LA:"Lao People's Democratic Republic",LB:"Lebanon",LC:"Saint Lucia",LI:"Liechtenstein",LK:"Sri Lanka",LR:"Liberia",LS:"Lesotho",LT:"Lithuania",LU:"Luxembourg",LV:"Latvia",LY:"Libya",MA:"Morocco",MC:"Monaco",MD:"Moldova, Republic of",ME:"Montenegro",MF:"Saint Martin (French part)",MG:"Madagascar",MH:"Marshall Islands",MK:"North Macedonia",ML:"Mali",MM:"Myanmar",MN:"Mongolia",MO:"Macao",MP:"Northern Mariana Islands",MQ:"Martinique",MR:"Mauritania",MS:"Montserrat",MT:"Malta",MU:"Mauritius",MV:"Maldives",MW:"Malawi",MX:"Mexico",MY:"Malaysia",MZ:"Mozambique",NA:"Namibia",NC:"New Caledonia",NE:"Niger",NF:"Norfolk Island",NG:"Nigeria",NI:"Nicaragua",NL:"Netherlands, Kingdom of the",NO:"Norway",NP:"Nepal",NR:"Nauru",NU:"Niue",NZ:"New Zealand",OM:"Oman",PA:"Panama",PE:"Peru",PF:"French Polynesia",PG:"Papua New Guinea",PH:"Philippines",PK:"Pakistan",PL:"Poland",PM:"Saint Pierre and Miquelon",PN:"Pitcairn",PR:"Puerto Rico",PS:"Palestine, State of",PT:"Portugal",PW:"Palau",PY:"Paraguay",QA:"Qatar",RE:"R\xE9union",RO:"Romania",RS:"Serbia",RU:"Russian Federation",RW:"Rwanda",SA:"Saudi Arabia",SB:"Solomon Islands",SC:"Seychelles",SD:"Sudan",SE:"Sweden",SG:"Singapore",SH:"Saint Helena, Ascension and Tristan da Cunha",SI:"Slovenia",SJ:"Svalbard and Jan Mayen",SK:"Slovakia",SL:"Sierra Leone",SM:"San Marino",SN:"Senegal",SO:"Somalia",SR:"Suriname",SS:"South Sudan",ST:"Sao Tome and Principe",SV:"El Salvador",SX:"Sint Maarten (Dutch part)",SY:"Syrian Arab Republic",SZ:"Eswatini",TC:"Turks and Caicos Islands",TD:"Chad",TF:"French Southern Territories",TG:"Togo",TH:"Thailand",TJ:"Tajikistan",TK:"Tokelau",TL:"Timor-Leste",TM:"Turkmenistan",TN:"Tunisia",TO:"Tonga",TR:"T\xFCrkiye",TT:"Trinidad and Tobago",TV:"Tuvalu",TW:"Taiwan, Province of China[note 1]",TZ:"Tanzania, United Republic of",UA:"Ukraine",UG:"Uganda",UM:"United States Minor Outlying Islands",US:"United States of America",UY:"Uruguay",UZ:"Uzbekistan",VA:"Holy See",VC:"Saint Vincent and the Grenadines",VE:"Venezuela, Bolivarian Republic of",VG:"Virgin Islands (British)",VI:"Virgin Islands (U.S.)",VN:"Viet Nam",VU:"Vanuatu",WF:"Wallis and Futuna",WS:"Samoa",YE:"Yemen",YT:"Mayotte",ZA:"South Africa",ZM:"Zambia",ZW:"Zimbabwe"};function z(a){if(a.length!==2)throw new Error("Invalid ISO 3166-1 alpha-2 code. It must be exactly 2 characters long.");return a=a.toUpperCase(),T[a]||a}var k={ab:"Abkhazian",aa:"Afar",af:"Afrikaans",ak:"Akan",sq:"Albanian",am:"Amharic",ar:"Arabic",an:"Aragonese",hy:"Armenian",as:"Assamese",av:"Avaric",ae:"Avestan",ay:"Aymara",az:"Azerbaijani",bm:"Bambara",ba:"Bashkir",eu:"Basque",be:"Belarusian",bn:"Bengali",bi:"Bislama",nb:"Norwegian Bokm\xE5l",bs:"Bosnian",br:"Breton",bg:"Bulgarian",my:"Burmese",es:"Spanish",ca:"Valencian",km:"Central Khmer",ch:"Chamorro",ce:"Chechen",ny:"Nyanja",zh:"Chinese",za:"Zhuang",cu:"Old Slavonic",cv:"Chuvash",kw:"Cornish",co:"Corsican",cr:"Cree",hr:"Croatian",cs:"Czech",da:"Danish",dv:"Maldivian",nl:"Flemish",dz:"Dzongkha",en:"English",eo:"Esperanto",et:"Estonian",ee:"Ewe",fo:"Faroese",fj:"Fijian",fi:"Finnish",fr:"French",ff:"Fulah",gd:"Scottish Gaelic",gl:"Galician",lg:"Ganda",ka:"Georgian",de:"German",ki:"Kikuyu",el:"Greek, Modern (1453-)",kl:"Kalaallisut",gn:"Guarani",gu:"Gujarati",ht:"Haitian Creole",ha:"Hausa",he:"Hebrew",hz:"Herero",hi:"Hindi",ho:"Hiri Motu",hu:"Hungarian",is:"Icelandic",io:"Ido",ig:"Igbo",id:"Indonesian",ia:"Interlingua (International Auxiliary Language Association)",ie:"Occidental",iu:"Inuktitut",ik:"Inupiaq",ga:"Irish",it:"Italian",ja:"Japanese",jv:"Javanese",kn:"Kannada",kr:"Kanuri",ks:"Kashmiri",kk:"Kazakh",rw:"Kinyarwanda",ky:"Kyrgyz",kv:"Komi",kg:"Kongo",ko:"Korean",kj:"Kwanyama",ku:"Kurdish",lo:"Lao",la:"Latin",lv:"Latvian",lb:"Luxembourgish",li:"Limburgish",ln:"Lingala",lt:"Lithuanian",lu:"Luba-Katanga",mk:"Macedonian",mg:"Malagasy",ms:"Malay",ml:"Malayalam",mt:"Maltese",gv:"Manx",mi:"Maori",mr:"Marathi",mh:"Marshallese",ro:"Romanian",mn:"Mongolian",na:"Nauru",nv:"Navajo",nd:"North Ndebele",nr:"South Ndebele",ng:"Ndonga",ne:"Nepali",se:"Northern Sami",no:"Norwegian",nn:"Nynorsk, Norwegian",ii:"Sichuan Yi",oc:"Occitan (post 1500)",oj:"Ojibwa",or:"Oriya",om:"Oromo",os:"Ossetic",pi:"Pali",pa:"Punjabi",ps:"Pushto",fa:"Persian",pl:"Polish",pt:"Portuguese",qu:"Quechua",rm:"Romansh",rn:"Rundi",ru:"Russian",sm:"Samoan",sg:"Sango",sa:"Sanskrit",sc:"Sardinian",sr:"Serbian",sn:"Shona",sd:"Sindhi",si:"Sinhalese",sk:"Slovak",sl:"Slovenian",so:"Somali",st:"Sotho, Southern",su:"Sundanese",sw:"Swahili",ss:"Swati",sv:"Swedish",tl:"Tagalog",ty:"Tahitian",tg:"Tajik",ta:"Tamil",tt:"Tatar",te:"Telugu",th:"Thai",bo:"Tibetan",ti:"Tigrinya",to:"Tonga (Tonga Islands)",ts:"Tsonga",tn:"Tswana",tr:"Turkish",tk:"Turkmen",tw:"Twi",ug:"Uyghur",uk:"Ukrainian",ur:"Urdu",uz:"Uzbek",ve:"Venda",vi:"Vietnamese",vo:"Volap\xFCk",wa:"Walloon",cy:"Welsh",fy:"Western Frisian",wo:"Wolof",xh:"Xhosa",yi:"Yiddish",yo:"Yoruba",zu:"Zulu"};function _(a){return k[a.toLowerCase()]||a}function j(a=window.navigator.userAgent){let e=a.match(/YaBrowser\/([^\s;]+)/i);if(e)return"Yandex "+e[1];let i=a.match(/Messenger\/([^\s;]+)/);if(i)return"Messenger "+i[1];if(a.match(/FBAN|FBAV/i)){let d="Facebook",h=a.match(/FBAN\/([^\s;]+)/i);h&&(d="Facebook "+h[1]);let p="",P=a.match(/FBAV\/([^\s;]+)/i);return P&&(p=P[1]),(d+" "+p).trim()}let r=a.match(/Instagram ([^\s;]+)/i);if(r)return"Instagram "+r[1];if(typeof window.TelegramWebview<"u")return"Telegram InApp Browser";if(/(micromessenger|weixin)/i.test(a))return"WeChat";let s=a.match(/SeaMonkey\/([^\s;]+)/);if(s)return"SeaMonkey "+s[1];let o=a.match(/Firefox\/([^\s;]+)/);if(o&&!a.match(/SeaMonkey\/([^\s;]+)/))return"Firefox "+o[1];let l=a.match(/Chrome\/([^\s;]+)/);if(l&&!a.match(/(Chromium|Edg[^\/]*)\//))return"Chrome "+l[1];let c=a.match(/Chromium\/([^\s;]+)/);if(c)return"Chromium "+c[1];let u=a.match(/Edg[^\/]*\/([^\s;]+)/);if(u)return"Edge "+u[1];if(a.match(/Safari\/([^\s;]+)/)&&!(a.match(/Chrome\/([^\s;]+)/)||a.match(/Chromium\/([^\s;]+)/))){let d=a.match(/Version\/([^\s;]+)/),h=d?d[1]:null;if(h)return"Safari "+h}let f=a.match(/OPR\/([^\s;]+)/);if(f)return"Opera "+f[1];let b=a.match(/Opera\/([^\s;]+)/);if(b)return"Opera "+b[1];if(/trident/i.test(a)){let d=/\brv[ :]+(\d+)/g.exec(a);if(d)return"IE "+d[1];let h=/\bMSIE\s([\d\.]+)/g.exec(a);return h?"IE "+h[1]:"IE"}return"Unknown"}function Z(a=window.navigator.userAgent.toLowerCase()){if(typeof window===void 0)return!1;let i=window.navigator.standalone,n=/safari/.test(a),r=/iphone|ipod|ipad|macintosh/.test(a);return r?!i&&!n||r&&!n:a.includes("wv")}async function Y(){try{return(await M()).isPrivate}catch(a){return console.error("Error checking incognito mode:",a),!1}}function J(){let a=window.navigator.language,e=k[a];return e||a}function Q(){try{return Intl.DateTimeFormat().resolvedOptions().timeZone}catch{return"-"}}function X(){let a={};for(let i=0;i<window.navigator.languages.length;i++){let r=window.navigator.languages[i].split("-"),s=r[0],o=_(s);if(a[o]||(a[o]=[]),r.length>1)for(let l=1;l<r.length;l++){let c=T[r[l]];c&&a[o].push(c)}}let e=[];for(let i in a)if(a[i].length>0){let n=a[i].join(", ");e.push(`${i} (${n})`)}else e.push(i);return e}export{E as getAndroidDeviceNameFromUserAgent,j as getBrowser,J as getBrowserLanguage,z as getCountryByCode,U as getDeviceModel,V as getDeviceType,y as getIosDeviceName,_ as getLanguageByCode,X as getLanguages,H as getOS,Q as getTimeZone,g as isIPad,m as isIPhone,Y as isIncognitoMode,O as isMac,I as isMobile,R as isPointerDevice,K as isSensorDevice,Z as isWebview,W as isWindows11};
